import React, { useState, useEffect } from 'react';
import './History.css';

const History = ({ isDarkMode }) => {
  const [history, setHistory] = useState([]);
  const [showHistory, setShowHistory] = useState(false);

  useEffect(() => {
    loadHistory();
  }, []);

  const loadHistory = () => {
    const allHistory = [];
    
    // ุงูุจุญุซ ุนู ุฌููุน ุงููุฒุงุฌุงุช ุงููุญููุธุฉ
    for (let i = 0; i < localStorage.length; i++) {
      const key = localStorage.key(i);
      if (key && key.startsWith('dailyMood')) {
        const moodTimestamp = localStorage.getItem('moodTimestamp');
        const mood = localStorage.getItem(key);
        if (moodTimestamp && mood) {
          allHistory.push({
            date: moodTimestamp,
            mood: mood,
            timestamp: key,
          });
        }
      }
    }
    
    setHistory(allHistory.slice(0, 7)); // ุขุฎุฑ 7 ุฃูุงู
  };

  const getMoodEmoji = (mood) => {
    const moodMap = {
      happy: '๐',
      excited: '๐คฉ',
      calm: '๐',
      sad: '๐',
      motivated: '๐ช',
    };
    return moodMap[mood] || '๐';
  };

  const getMoodLabel = (mood) => {
    const labelMap = {
      happy: 'ุณุนูุฏ',
      excited: 'ูุชุญูุณ',
      calm: 'ูุงุฏุฆ',
      sad: 'ุญุฒูู',
      motivated: 'ููุฏูุน',
    };
    return labelMap[mood] || 'ุบูุฑ ูุนุฑูู';
  };

  const clearHistory = () => {
    if (window.confirm('ูู ุชุฑูุฏ ูุณุญ ุฌููุน ุงูุณุฌูุ')) {
      localStorage.clear();
      setHistory([]);
    }
  };

  return (
    <section className={`history ${isDarkMode ? 'dark' : 'light'}`}>
      <button
        className="history-toggle"
        onClick={() => setShowHistory(!showHistory)}
      >
        {showHistory ? '๐ ุฅุฎูุงุก ุงูุณุฌู' : '๐ ุนุฑุถ ุงูุณุฌู'}
      </button>

      {showHistory && (
        <div className="history-content">
          <h3 className="history-title">๐ ุณุฌู ุงููุฒุงุฌุงุช</h3>
          
          {history.length > 0 ? (
            <div className="history-list">
              {history.map((item, index) => (
                <div key={index} className="history-item">
                  <span className="history-emoji">{getMoodEmoji(item.mood)}</span>
                  <span className="history-mood">{getMoodLabel(item.mood)}</span>
                  <span className="history-date">{item.date}</span>
                </div>
              ))}
            </div>
          ) : (
            <p className="history-empty">ูุง ุชูุฌุฏ ุจูุงูุงุช ุณุงุจูุฉ</p>
          )}

          {history.length > 0 && (
            <button className="clear-history-btn" onClick={clearHistory}>
              ๐๏ธ ูุณุญ ุงูุณุฌู
            </button>
          )}
        </div>
      )}
    </section>
  );
};

export default History;
